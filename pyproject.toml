[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llamavault"
version = "0.2.0"
description = "Secure credential manager for LLM applications"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "LlamaSearch AI", email = "team@llamasearch.ai"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["security", "credential management", "llm", "api-keys", "vault"]
dependencies = [
    "cryptography>=39.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "rich>=12.0.0",
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "flask>=2.2.0",
    "keyring>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.1.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pre-commit>=3.0.0",
]
web = [
    "flask-login>=0.6.0",
    "flask-sqlalchemy>=3.0.0",
    "flask-wtf>=1.1.0",
    "flask-cors>=3.0.0",
    "werkzeug>=2.2.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/llamasearch/llamavault"
Documentation = "https://llamavault.readthedocs.io"
Repository = "https://github.com/llamasearch/llamavault"
"Bug Tracker" = "https://github.com/llamasearch/llamavault/issues"

[project.scripts]
llamavault = "llamavault.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["llamavault"]

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["llamavault"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*" 